# Generated by Django 5.2.3 on 2025-07-11 08:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ApiConnection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("provider", models.CharField(max_length=30)),
                ("access_token", models.TextField(blank=True, null=True)),
                ("refresh_token", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField()),
                ("last_connected", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.companyprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BillingInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active_plan", models.CharField(default="free", max_length=30)),
                ("card_last4", models.CharField(blank=True, max_length=4)),
                ("stripe_customer_id", models.CharField(blank=True, max_length=100)),
                ("auto_renew", models.BooleanField()),
                (
                    "company",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.companyprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GA4Token",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField(blank=True, null=True)),
                ("token_expiry", models.DateTimeField(blank=True, null=True)),
                ("property_id", models.CharField(blank=True, max_length=50, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_data_fetch", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.companyprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InstagramToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField(blank=True, null=True)),
                ("token_expiry", models.DateTimeField(blank=True, null=True)),
                (
                    "instagram_business_account_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "facebook_page_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_data_fetch", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.companyprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_reports", models.BooleanField()),
                ("campaign_end", models.BooleanField()),
                ("integration_error", models.BooleanField()),
                ("push_enabled", models.BooleanField()),
                (
                    "company",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.companyprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OAuthState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("ga4", "GA4"),
                            ("youtube", "YouTube"),
                            ("instagram", "Instagram"),
                        ],
                        max_length=20,
                    ),
                ),
                ("state", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.companyprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SecuritySetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("two_factor_enabled", models.BooleanField()),
                ("last_password_change", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.companyprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="YouTubeToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField(blank=True, null=True)),
                ("token_expiry", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_data_fetch", models.DateTimeField(blank=True, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.companyprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GA4AgeData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age", models.CharField(max_length=50)),
                ("active_users", models.IntegerField()),
                ("sessions", models.IntegerField()),
                ("user_engagement_duration", models.FloatField()),
                ("event_count", models.FloatField()),
                ("conversions", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ga4_age_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "age")},
            },
        ),
        migrations.CreateModel(
            name="GA4CityData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city", models.CharField(max_length=100)),
                ("active_users", models.IntegerField()),
                ("sessions", models.IntegerField()),
                ("user_engagement_duration", models.FloatField()),
                ("event_count", models.FloatField()),
                ("conversions", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ga4_city_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "city")},
            },
        ),
        migrations.CreateModel(
            name="GA4CountryData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country", models.CharField(max_length=100)),
                ("active_users", models.IntegerField()),
                ("new_users", models.IntegerField()),
                ("sessions", models.IntegerField()),
                ("user_engagement_duration", models.FloatField()),
                ("event_count", models.FloatField()),
                ("engagement_rate", models.FloatField()),
                ("conversions", models.FloatField()),
                ("bounce_rate", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ga4_country_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "country")},
            },
        ),
        migrations.CreateModel(
            name="GA4DeviceCategoryData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("device_category", models.CharField(max_length=100)),
                ("active_users", models.IntegerField()),
                ("engaged_sessions", models.IntegerField()),
                ("user_engagement_duration", models.FloatField()),
                ("event_count", models.FloatField()),
                ("bounce_rate", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ga4_device_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "device_category")},
            },
        ),
        migrations.CreateModel(
            name="GA4OperatingSystemData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("operating_system", models.CharField(max_length=100)),
                ("active_users", models.IntegerField()),
                ("engaged_sessions", models.IntegerField()),
                ("engagement_rate", models.FloatField()),
                ("user_engagement_duration", models.FloatField()),
                ("event_count", models.FloatField()),
                ("bounce_rate", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ga4_os_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "operating_system")},
            },
        ),
        migrations.CreateModel(
            name="GA4SessionSourceMediumData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_source_medium", models.CharField(max_length=255)),
                ("sessions", models.IntegerField()),
                ("conversions", models.IntegerField()),
                ("engagement_rate", models.FloatField()),
                ("event_count", models.IntegerField()),
                ("bounce_rate", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ga4_session_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "session_source_medium")},
            },
        ),
        migrations.CreateModel(
            name="GA4UserAcquisitionSourceData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("acquisition_source", models.CharField(max_length=255)),
                ("new_users", models.IntegerField()),
                ("sessions", models.IntegerField()),
                ("engagement_rate", models.FloatField()),
                ("user_engagement_duration", models.FloatField()),
                ("conversions", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ga4_acquisition_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["company", "acquisition_source"],
                        name="company_ga4_company_a5c190_idx",
                    )
                ],
                "unique_together": {("company", "acquisition_source")},
            },
        ),
        migrations.CreateModel(
            name="GA4UserGenderData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gender", models.CharField(max_length=50)),
                ("sessions", models.IntegerField()),
                ("engagement_rate", models.IntegerField()),
                ("user_engagement_duration", models.FloatField()),
                ("event_count", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ga4_gender_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "gender")},
            },
        ),
        migrations.CreateModel(
            name="YouTubeAgeGroupData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age_group", models.CharField(max_length=50)),
                ("gender", models.CharField(max_length=50)),
                ("viewer_percentage", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="youtube_age_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "age_group", "gender")},
            },
        ),
        migrations.CreateModel(
            name="YouTubeDeviceTypeData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("device_type", models.CharField(max_length=100)),
                ("views", models.IntegerField()),
                ("average_view_duration", models.FloatField()),
                ("estimated_minutes_watched", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="youtube_device_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "device_type")},
            },
        ),
        migrations.CreateModel(
            name="YouTubeTopSubscribersData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("video_id", models.CharField(max_length=100)),
                ("subscribers_gained", models.IntegerField()),
                ("subscribers_lost", models.IntegerField()),
                ("views", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="youtube_subscribers_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "video_id")},
            },
        ),
        migrations.CreateModel(
            name="YouTubeTrafficSourceData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("insight_traffic_source_type", models.CharField(max_length=100)),
                ("views", models.IntegerField()),
                ("average_view_duration", models.FloatField()),
                ("estimated_minutes_watched", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="youtube_traffic_data",
                        to="accounts.companyprofile",
                    ),
                ),
            ],
            options={
                "unique_together": {("company", "insight_traffic_source_type")},
            },
        ),
    ]
